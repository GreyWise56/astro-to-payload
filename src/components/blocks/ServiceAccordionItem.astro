---
// src/components/blocks/ServiceAccordionItem.astro

export interface Props {
  title: string;
  subtitle: string;
  // An array of arrays, where each inner array is a column of bullet points
  itemColumns: string[][];
}
const { title, subtitle, itemColumns } = Astro.props;
---
<div class="accordion-itemV5 overflow-hidden bg-backgroundBody dark:bg-dark border border-secondary/10 dark:border-backgroundBody/10 duration-300 faq-body-transition">
  <div class="accordion-header relative cursor-pointer py-5 flex justify-between px-5 md:px-10 group">
    <h3 class="flex flex-col md:flex-row items-start md:items-center gap-x-10 gap-y-3 text-[25px] md:text-4xl lg:text-5xl font-normal leading-[25.2px] md:leading-[1.2]">
      <span class="text-inherit font-medium">{title}</span>
      <p class="text-base md:text-xl md:leading-[1.4] md:tracking-[0.4px] mt-2 pr-[2px] max-w-lg">
        {subtitle}
      </p>
    </h3>
    <div class="accordion-header-iconV5">
      <span>
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 32 32" fill="none" class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 active-arrow group-hover:rotate-90 ease-faq-body-transition duration-300 size-6 md:size-8">
          <path d="M5 16H27" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M18 7L27 16L18 25" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </span>
    </div>
  </div>
  <div class="accordion-body px-14 duration-300 faq-body-transition h-0 flex flex-col md:flex-row justify-start md:gap-14 md:ml-2">
    {itemColumns.map(column => (
      <ul class="[&>*:not(:last-child)]:mb-1">
        {column.map(item => (
          <li class="list-disc text-secondary/70 dark:text-backgroundBody/70 text-[17px] leading-[1.5] tracking-[0.36px]">
            {item}
          </li>
        ))}
      </ul>
    ))}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.accordion-itemV5').forEach(item => {
      const header = item.querySelector('.accordion-header') as HTMLElement;
      if (header && header.dataset.listenerAttached !== 'true') {
        header.dataset.listenerAttached = 'true';
        header.addEventListener('click', () => {
          const body = item.querySelector('.accordion-body') as HTMLElement;
          item.classList.toggle('active');
          if (item.classList.contains('active')) {
            body.style.height = body.scrollHeight + 'px';
          } else {
            body.style.height = '0px';
          }
        });
      }
    });
  });
</script>