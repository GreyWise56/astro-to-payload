---
// src/components/blocks/AboutV6.astro (Payload Block Version)

export interface Props {
  badge: string;
  heading: any; // RichText from Payload
  subheading: string;
  button: {
    text: string;
    url: string;
  };
}

const { badge, heading, subheading, button } = Astro.props;

// Convert Payload RichText to HTML string
const getTextContent = (richTextContent: any): string => {
  if (typeof richTextContent === 'string') {
    return richTextContent;
  }
  
  if (richTextContent?.root?.children) {
    return richTextContent.root.children
      .map((child: any) => {
        if (child.type === 'paragraph' && child.children) {
          return child.children.map((textNode: any) => textNode.text || '').join('');
        }
        return child.text || '';
      })
      .join(' ');
  }
  
  return '';
};

const headingContent = getTextContent(heading);
---

<section class="pt-6 lg:pt-12 pb-14 md:pb-16 lg:pb-[88px] xl:pb-[100px] relative overflow-hidden">
  <div class="container">
    <div class="text-center">
      <div class="rv-badge reveal-me">
        <span class="rv-badge-text">{badge}</span>
      </div>
      <h2 class="mt-3 mb-8 text-center text-appear" set:html={headingContent}>
      </h2>
    </div>
    <div class="reveal-me">
      <h3 class="reveal-text-2 text-2xl text-secondary/90 dark:text-backgroundBody/70 text-center lg:text-3xl xl:text-4xl font-normal lg:leading-[1.2] lg:tracking-[0.72px]">
        {subheading}
      </h3>
    </div>

    <ul class="flex justify-center mt-[56px] mx-auto list-none reveal-me">
      <li class="block md:inline-block w-full mx-auto md:w-auto text-center">
        <a href={button.url} class="rv-button rv-button-white block md:inline-block">
          <div class="rv-button-top">
            <span>{button.text}</span>
          </div>
          <div class="rv-button-bottom">
            <span>{button.text}</span>
          </div>
        </a>
      </li>
    </ul>
  </div>
</section>