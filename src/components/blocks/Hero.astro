---
// src/components/blocks/Hero.astro
import { Image } from 'astro:assets';

// Define all the editable parts of the component as props
export interface Props {
  badgeText?: string;
  heading: string; // We'll use a special character to handle line breaks
  italicizedWord?: string;
  description?: string;
  primaryButton?: {
    text: string;
    url: string;
  };
  secondaryButton?: {
    text: string;
    url: string;
  };
  backgroundImageSrc: ImageMetadata; // For Astro's optimized images
}

const { 
    badgeText = "Open for new work",
    heading = "Empowering Brand|with Cutting-Edge|Design Solutions",
    italicizedWord = "Design",
    description = "Turn your vision into reality with Rivor. We blend design, strategy, and technology to build powerful digital experiences that elevate your brand.",
    primaryButton = { text: "Start a Project", url: "/contact" },
    secondaryButton = { text: "Our Services", url: "/services" },
    backgroundImageSrc,
} = Astro.props;

// Split the heading by our special '|' character for line breaks
const headingLines = heading.split('|');
---

<section class="pt-[137px] md:pt-[160px] xl:pt-[180px] pb-20 md:pb-[100px] relative overflow-hidden">
  <div id="hero-gradient-wrapper" class="absolute w-full h-full top-0 left-0 -z-10 blur-[35px] md:blur-[60px]">
    <Image 
        src={backgroundImageSrc} 
        alt="hero gradient background" 
        id="hero-gradient"
        class="absolute left-1/2 top-1/2 -translate-x-1/2 max-md:-translate-y-[60%] md:-translate-y-1/2"
    />
  </div>

  <div class="container reveal-me">
    <div class="text-center">
      {badgeText && (
        <div class="rv-badge mb-5 md:mb-10">
          <span class="rv-badge-text">{badgeText}</span>
        </div>
      )}

      <h1 class="mb-7 xl:mb-8 max-sm:text-4xl">
        {headingLines.map((line, index) => (
          <>
            {line.includes(italicizedWord) 
              ? <>{line.split(italicizedWord)[0]}<span class="font-instrument italic">{italicizedWord}</span>{line.split(italicizedWord)[1]}</>
              : line
            }
            {index < headingLines.length - 1 && <br />}
          </>
        ))}
      </h1>

      {description && (
        <p class="mb-10 md:mb-14 xl:mb-[76px] max-w-xl lg:max-w-[750px] mx-auto">
          {description}
        </p>
      )}

      <ul class="flex flex-col md:flex-row justify-center items-center gap-4 md:gap-6 list-none">
        {primaryButton && (
          <li class="block md:inline-block w-[90%] mx-auto md:ml-auto md:mr-0 md:w-auto">
            <a href={primaryButton.url} class="rv-button rv-button-primary block md:inline-block">
              <div class="rv-button-top"><span>{primaryButton.text}</span></div>
              <div class="rv-button-bottom"><span class="text-nowrap">{primaryButton.text}</span></div>
            </a>
          </li>
        )}
        {secondaryButton && (
          <li class="block md:inline-block w-[90%] mx-auto md:mr-auto md:ml-0 md:w-auto">
            <a href={secondaryButton.url} class="rv-button rv-button-white block md:inline-block">
              <div class="rv-button-top"><span>{secondaryButton.text}</span></div>
              <div class="rv-button-bottom"><span>{secondaryButton.text}</span></div>
            </a>
          </li>
        )}
      </ul>
    </div>
  </div>
</section>