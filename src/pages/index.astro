---
// src/pages/index.astro
// üè† DYNAMIC HOMEPAGE - Powered by Payload CMS

import BaseLayout from '../layouts/BaseLayout.astro'
import { getPageData } from '../utils/payload'
import type { PayloadBlock } from '../utils/payload'

// üîç Get homepage data from Payload
console.log('üè† Loading homepage from Payload...')
const data = await getPageData('home')

if (!data) {
  console.log('‚ùå No homepage found in Payload - using fallback')
}

const page = data?.page
const title = page?.title || 'JAM Group Studio'
const description = page?.metaDescription || 'Professional Marketing Agency - Mobile, Alabama'

// üß± Extract blocks for rendering
const blocks = page?.pageBlocks || []
console.log(`üß± Found ${blocks.length} blocks on homepage`)

// üéØ Helper function to safely get block properties
function getBlockProp(block: PayloadBlock, prop: string): any {
  return (block as any)[prop]
}
---

<BaseLayout title={title} description={description}>
  {blocks.length > 0 ? (
    <!-- üé® RENDER PAYLOAD BLOCKS -->
    <div class="payload-blocks">
      {blocks.map((block) => (
        <section 
          class={`block block--${block.blockType}`}
          data-block-type={block.blockType}
          data-block-id={block.id}
        >
          {block.blockType === 'hero' && (
            <!-- ü¶∏ HERO BLOCK -->
            <div class="hero-section">
              <div class="container">
                <div class="hero-content">
                  {block.title && <h1 class="hero-title">{block.title}</h1>}
                  {block.subtitle && <h2 class="hero-subtitle">{block.subtitle}</h2>}
                  {block.content && <p class="hero-description">{block.content}</p>}
                  {getBlockProp(block, 'primaryButton')?.text && (
                    <a href={getBlockProp(block, 'primaryButton')?.url || '#'} class="rv-button rv-button-primary">
                      <div class="rv-button-top">
                        <span>{getBlockProp(block, 'primaryButton').text}</span>
                      </div>
                      <div class="rv-button-bottom">
                        <span>{getBlockProp(block, 'primaryButton').text}</span>
                      </div>
                    </a>
                  )}
                </div>
                {block.image && (
                  <div class="hero-image">
                    <img 
                      src={`http://localhost:3000${block.image.url}`} 
                      alt={block.image.alt || block.title || 'Hero image'}
                      loading="eager"
                      fetchpriority="high"
                    />
                  </div>
                )}
              </div>
            </div>
          )}

          {block.blockType === 'about' && (
            <!-- üë• ABOUT BLOCK -->
            <div class="about-section">
              <div class="container">
                {block.title && <h2 class="about-title">{block.title}</h2>}
                {block.content && <p class="about-content">{block.content}</p>}
                {block.image && (
                  <img 
                    src={`http://localhost:3000${block.image.url}`} 
                    alt={block.image.alt || block.title || 'About image'}
                    loading="lazy"
                  />
                )}
              </div>
            </div>
          )}

          {block.blockType === 'blog-v16' && (
            <!-- üìù BLOG SECTION -->
            <div class="blog-section">
              <div class="container">
                {getBlockProp(block, 'heading') && <h2 class="blog-heading">{getBlockProp(block, 'heading')}</h2>}
                {getBlockProp(block, 'subheading') && <p class="blog-subheading">{getBlockProp(block, 'subheading')}</p>}
                {getBlockProp(block, 'button')?.text && (
                  <a href={getBlockProp(block, 'button')?.url || '#'} class="rv-button rv-button-secondary">
                    <div class="rv-button-top">
                      <span>{getBlockProp(block, 'button').text}</span>
                    </div>
                    <div class="rv-button-bottom">
                      <span>{getBlockProp(block, 'button').text}</span>
                    </div>
                  </a>
                )}
              </div>
            </div>
          )}

          {block.blockType === 'services' && (
            <!-- üõ†Ô∏è SERVICES BLOCK -->
            <div class="services-section">
              <div class="container">
                {block.title && <h2 class="services-title">{block.title}</h2>}
                {block.description && <p class="services-description">{block.description}</p>}
              </div>
            </div>
          )}

          {block.blockType === 'cta' && (
            <!-- üì¢ CTA BLOCK -->
            <div class="cta-section">
              <div class="container">
                {block.title && <h2 class="cta-title">{block.title}</h2>}
                {block.content && <p class="cta-content">{block.content}</p>}
                {getBlockProp(block, 'primaryButton')?.text && (
                  <a href={getBlockProp(block, 'primaryButton')?.url || '#'} class="rv-button rv-button-primary">
                    <div class="rv-button-top">
                      <span>{getBlockProp(block, 'primaryButton').text}</span>
                    </div>
                    <div class="rv-button-bottom">
                      <span>{getBlockProp(block, 'primaryButton').text}</span>
                    </div>
                  </a>
                )}
              </div>
            </div>
          )}

          <!-- üö® UNKNOWN BLOCK TYPE -->
          {!['hero', 'about', 'blog-v16', 'services', 'cta'].includes(block.blockType) && (
            <div class="unknown-block">
              <div class="container">
                <h3>Unknown Block: {block.blockType}</h3>
                <pre>{JSON.stringify(block, null, 2)}</pre>
              </div>
            </div>
          )}
        </section>
      ))}
    </div>
  ) : (
    <!-- üìù FALLBACK CONTENT -->
    <section class="fallback-hero">
      <div class="container">
        <h1>Welcome to JAM Group Studio</h1>
        <p>Professional Marketing Agency in Mobile, Alabama</p>
        <p><strong>üéØ Create a homepage in Payload CMS to see your blocks here!</strong></p>
        <a href="http://localhost:3000/admin" class="rv-button rv-button-primary">
          <div class="rv-button-top">
            <span>Go to CMS Admin</span>
          </div>
          <div class="rv-button-bottom">
            <span>Go to CMS Admin</span>
          </div>
        </a>
      </div>
    </section>
  )}
</BaseLayout>

<style>
  /* üé® BASIC BLOCK STYLES */
  .payload-blocks {
    width: 100%;
  }
  
  .block {
    padding: 4rem 0;
    width: 100%;
  }
  
  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 2rem;
  }
  
  /* ü¶∏ HERO STYLES */
  .hero-section {
    min-height: 80vh;
    display: flex;
    align-items: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }
  
  .hero-content {
    text-align: center;
    max-width: 800px;
    margin: 0 auto;
  }
  
  .hero-title {
    font-size: 3rem;
    font-weight: 700;
    margin-bottom: 1rem;
    line-height: 1.2;
  }
  
  .hero-subtitle {
    font-size: 1.5rem;
    font-weight: 400;
    margin-bottom: 1.5rem;
    opacity: 0.9;
  }
  
  .hero-description {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    opacity: 0.8;
  }
  
  .hero-image img {
    max-width: 100%;
    height: auto;
    border-radius: 12px;
    margin-top: 2rem;
  }
  
  /* üë• ABOUT STYLES */
  .about-section {
    background: #f8f9fa;
  }
  
  .about-title {
    font-size: 2.5rem;
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .about-content {
    font-size: 1.1rem;
    line-height: 1.7;
    max-width: 600px;
    margin: 0 auto;
    text-align: center;
  }
  
  /* üìù BLOG STYLES */
  .blog-section {
    background: #DDF3EC;
  }
  
  .blog-heading {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    text-align: center;
  }
  
  .blog-subheading {
    font-size: 1.1rem;
    text-align: center;
    margin-bottom: 2rem;
    opacity: 0.8;
  }
  
  /* üõ†Ô∏è SERVICES STYLES */
  .services-title {
    font-size: 2.5rem;
    margin-bottom: 2rem;
    text-align: center;
  }
  
  .services-description {
    font-size: 1.1rem;
    text-align: center;
    max-width: 600px;
    margin: 0 auto;
  }
  
  /* üì¢ CTA STYLES */
  .cta-section {
    background: #2563eb;
    color: white;
    text-align: center;
  }
  
  .cta-title {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }
  
  .cta-content {
    font-size: 1.2rem;
    margin-bottom: 2rem;
    opacity: 0.9;
  }
  
  /* üìù FALLBACK STYLES */
  .fallback-hero {
    min-height: 80vh;
    display: flex;
    align-items: center;
    text-align: center;
    background: #f8f9fa;
  }
  
  .fallback-hero h1 {
    font-size: 3rem;
    margin-bottom: 1rem;
  }
  
  /* üö® UNKNOWN BLOCK */
  .unknown-block {
    background: #fee;
    border: 2px dashed #f00;
    padding: 2rem;
  }
  
  .unknown-block pre {
    background: #fff;
    padding: 1rem;
    border-radius: 4px;
    overflow: auto;
    font-size: 0.9rem;
  }
  
  /* üì± RESPONSIVE */
  @media (max-width: 768px) {
    .hero-title, .about-title, .blog-heading, .services-title, .cta-title {
      font-size: 2rem;
    }
    
    .container {
      padding: 0 1rem;
    }
    
    .block {
      padding: 2rem 0;
    }
  }
</style>