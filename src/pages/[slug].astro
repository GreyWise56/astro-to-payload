---
// src/pages/[slug].astro - Now using real BlogV16 component

import BaseLayout from '../layouts/BaseLayout.astro';
import BlogV16 from '../components/blocks/BlogV16.astro';

// Static generation
export async function getStaticPaths() {
  try {
    console.log('🔍 getStaticPaths: Fetching page slugs...');
    
    const response = await fetch('http://localhost:3000/api/pages?limit=100');
    const data = await response.json();
    
    console.log('🔍 getStaticPaths: Found', data.docs?.length, 'pages');
    
    const paths = data.docs
      .filter((page: any) => page.slug)
      .map((page: any) => {
        console.log('🔍 getStaticPaths: Adding path for slug:', page.slug);
        return {
          params: { slug: page.slug },
        };
      });
    
    console.log('🔍 getStaticPaths: Returning', paths.length, 'paths');
    return paths;
    
  } catch (error) {
    console.error('🔍 getStaticPaths: Error:', error);
    return [];
  }
}

// Get page data
const { slug } = Astro.params;

if (!slug) {
  throw new Error('No slug provided');
}

console.log('🎯 Rendering page for slug:', slug);

let pageData;
let error;

try {
  const response = await fetch(`http://localhost:3000/api/pages?where[slug][equals]=${slug}&depth=2`);
  const data = await response.json();
  pageData = data.docs[0];
  
  console.log('🎯 Page data exists:', !!pageData);
  console.log('🎯 Page blocks count:', pageData?.pageBlocks?.length);
  
} catch (err) {
  const errorMessage = err instanceof Error ? err.message : 'Unknown error';
  console.error('🎯 Error fetching page:', errorMessage);
  error = errorMessage;
}

const title = pageData?.title || 'Page Not Found';
---

<BaseLayout title={title} description={pageData?.metaDescription || 'JAM Group Studio'}>
  {error ? (
    <div class="container mx-auto px-4 py-16">
      <h1 class="text-4xl font-bold text-red-600 mb-4">Error Loading Page</h1>
      <p class="text-gray-600">{error}</p>
      <a href="/" class="inline-block mt-4 px-6 py-3 bg-blue-600 text-white rounded hover:bg-blue-700">
        Return Home
      </a>
    </div>
  ) : pageData ? (
    <div>
      <!-- Render page blocks -->
      {pageData.pageBlocks && pageData.pageBlocks.length > 0 ? (
        pageData.pageBlocks.map((block: any) => {
          console.log('🎨 Rendering block:', block.blockType);
          
          switch (block.blockType) {
            case 'blog-v16':
              return <BlogV16 
                heading={block.heading}
                subheading={block.subheading}
                button={block.button}
                posts={block.posts}
              />;
            
            // Add other block renderers here
            default:
              return (
                <div class="container mx-auto px-4 py-8">
                  <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded">
                    <strong>Unknown Block Type:</strong> {block.blockType}
                  </div>
                </div>
              );
          }
        })
      ) : (
        <div class="container mx-auto px-4 py-16">
          <h1 class="text-4xl font-bold mb-4">{pageData.title}</h1>
          <p class="text-gray-600">This page is ready for content blocks.</p>
          <a href="http://localhost:3000/admin" class="inline-block mt-4 px-6 py-3 bg-blue-600 text-white rounded hover:bg-blue-700">
            Edit in Admin
          </a>
        </div>
      )}
    </div>
  ) : (
    <div class="container mx-auto px-4 py-16">
      <h1 class="text-4xl font-bold mb-4">Page Not Found</h1>
      <p class="text-gray-600">The page you're looking for doesn't exist.</p>
      <a href="/" class="inline-block mt-4 px-6 py-3 bg-blue-600 text-white rounded hover:bg-blue-700">
        Return Home
      </a>
    </div>
  )}
</BaseLayout>